<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engineering on Fly-Out</title><link>https://nagodede.github.io/tags/engineering/</link><description>Recent content in Engineering on Fly-Out</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Sep 2020 13:28:58 +0900</lastBuildDate><atom:link href="https://nagodede.github.io/tags/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>A-propos de l'auteur</title><link>https://nagodede.github.io/pages/whoiam/</link><pubDate>Wed, 16 Sep 2020 13:28:58 +0900</pubDate><guid>https://nagodede.github.io/pages/whoiam/</guid><description>Cette page est une bio informelle, mon CV professionnel est disponible ici.
*Mon nom est V. depuis ma naissance dans les années 80.
Pourquoi est ce que je préfère rester anonyme ?
Simplement, pour vivre heureux, vivons cachés.
Internet est plein de surprises, bonnes et mauvaises. Un des moyens les plus simples pour se prémunir des mauvaises surprises et de rester cacher.
J&amp;rsquo;argumente ce choix par l&amp;rsquo;analyse suivante:
Soit, vous me connaissez d&amp;rsquo;une manière ou d&amp;rsquo;une autre, et dans ce cas, il est inutile que je vous redonne ces informations, Soit un moteur de recherche vous a amené ici, et dans ce cas là, la connaissance de mon identité n&amp;rsquo;a aucun intérêt dans l&amp;rsquo;immédiat.</description></item><item><title>filetest</title><link>https://nagodede.github.io/pages/filetree/</link><pubDate>Wed, 16 Sep 2020 13:28:58 +0900</pubDate><guid>https://nagodede.github.io/pages/filetree/</guid><description>List the file trees</description></item><item><title>Eureka An old Fashion Equation Solver</title><link>https://nagodede.github.io/eureka/</link><pubDate>Thu, 19 Mar 2020 16:22:49 +0900</pubDate><guid>https://nagodede.github.io/eureka/</guid><description>Eureka An old Fashion Equation Solver During my studies (several years ago), I discovered the Equation solver TkSolver. Some days ago, I was trying to find a GNU equivalent to TkSolver as I wanted to perform some computations. My searches were unsuccessful (not exactly but I didn’t find a similar tool) but I found Eureka Solver which is an old solver (may be the first of this type).
Eureka Solver (and TK solver) is build on the declarative programming approach while the « standard » solvers use a procedural approach.</description></item></channel></rss>